#################################################################################
#  - FILE: MMOREseqs Makefile
#  - DESC: This is base Makefile.  This will run CMake in proper subdirectory.
#################################################################################

# Compilers
SHELL 		:= /bin/sh
CC 				:= gcc
CXX 			:= g++
# COMMANDLINE COMMANDS 
CD 				:= cd 
MKDIR 		:= mkdir
MKDIR_P 	:= $(MKDIR) -p
RM 				:= rm
RMDIR 		:= rmdir

# root directory.
ROOT_DIR ?= $(shell pwd)
# Input directories
SOURCE_DIR 			?= src/
SCRIPT_DIR 			?= scripts/
# Input subdirectories
SOURCE_DIRS 		:= $(shell find $(SOURCE_DIR) -type d)
SCRIPT_DIRS 		:= $(shell find $(SCRIPT_DIR) -type d)
# Input files
SOURCES 				:= $(shell find $(SOURCE_DIR) -name *.cpp -or -name *.c -or -name *.s)
HEADERS 				:= $(shell find $(SOURCE_DIR) -name *.hpp -or -name *.h)
SCRIPTS 				:= $(shell find $(SCRIPT_DIR) -name *.py -or -name *.sh)
TOOLS 					:= $(shell find $(TOOL_DIR) -name hmmbuild -or -name hmmsearch -or -name -mmseqs)

# Build directories
BUILD_RELEASE_DIR 	:= build 
BUILD_DEBUG_DIR 		:= build-debug

# Build-Specific Flags
# -g (Debugging symbols)
# -pg (Profiling info)
# flags for release version
RELEASE_C_FLAGS 	:= -O3 -Wall
# suggested flags: -g (line numbers) -pg (gprof) -DDEBUG=1 -fsanitize=address
DEBUG_C_FLAGS 		:= -g -pg -fsanitize=address -DDEBUG=1 
# flags for alpha version
VALGRIND_C_FLAGS 	:= -g -O0 


default:
	$(MAKE) build-release

build-release:
	$(info *** BUILD-RELEASE *** )
	@mkdir -p $(BUILD_RELEASE_DIR)/bin
	@cmake -S . -B $(BUILD_RELEASE_DIR) -DCMAKE_BUILD_TYPE=RELEASE
	@cd $(BUILD_RELEASE_DIR) & \
		make CFLAGS=$(RELEASE_C_FLAGS) CXXFLAGS=$(RELEASE_C_FLAGS)

build-debug:
	$(info *** BUILD-DEBUG *** )
	@mkdir -p $(BUILD_DEBUG_DIR)/bin
	@cmake -S . -B $(BUILD_DEBUG_DIR) -DCMAKE_BUILD_TYPE=DEBUG
	@cd $(BUILD_DEBUG_DIR) & \
		make CFLAGS=$(DEBUG_C_FLAGS) CXXFLAGS=$(DEBUG_C_FLAGS)

build-debug:
	$(info *** BUILD-DEBUG *** )
	@mkdir -p $(BUILD_DEBUG_DIR)/bin
	@cmake -S . -B $(BUILD_DEBUG_DIR) -DCMAKE_BUILD_TYPE=DEBUG
	@cd $(BUILD_DEBUG_DIR) & \
		make CFLAGS=$(VALGRIND_C_FLAGS) CXXFLAGS=$(VALGRIND_C_FLAGS)

# load all submodules
submodules:
	@echo '*** MAKE SUBMODULE ***'
	git submodule update --init --recursive 

# code formatting 
format: $(SOURCES)
	@echo '*** MAKE FORMAT ***'
	clang-format -i -style=file $(SOURCES) $(HEADERS)

# remove build
clean: 
	@echo "*** MAKE CLEAN ***"
	@cd $(BUILD_RELEASE_DIR) & \
		make clean 
	@cd $(BUILD_DEBUG_DIR) & \
		make clean 

# RECIPES
.PHONY: all build-release build-debug format clean
